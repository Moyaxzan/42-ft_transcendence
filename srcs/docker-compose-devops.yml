services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.21
    platform: linux/amd64
    container_name: elasticsearch
    env_file:
      - .env
    environment:
      - node.name=node-1
      - cluster.name=docker-elasticsearch
      - discovery.type=single-node
      - network.host=0.0.0.0
      - ES_JAVA_OPTS=-Xms512m -Xmx512m -Dlog4j2.disable.jmx=true -Djdk.disabled.cgroupv2=true
      - xpack.security.enabled=true
      - cluster.routing.allocation.disk.watermark.low=85%
      - cluster.routing.allocation.disk.watermark.high=90%
      - cluster.routing.allocation.disk.watermark.flood_stage=95%
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
    networks:
      - transcendence
    healthcheck:
      test: ["CMD-SHELL", "curl -fsu elastic:${ELASTIC_PASSWORD} http://localhost:9200/_cluster/health | grep -E '\"status\":\"(green|yellow)\"'"]
      interval: 10s
      retries: 10
      start_period: 60s
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana@sha256:fbc1f4807090f044397cf7d5d5c0272075b9ead9657043f5c1d467bb9a7ea81e
    container_name: kibana
    env_file:
      - .env
    environment:
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      SERVER_BASEPATH: "/kibana"
      SERVER_REWRITEBASEPATH: "true"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - transcendence
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash@sha256:096bb59d75d886c6de299b651c41af697a960559c1b90d0ba3652b60b6ac4007
    container_name: logstash
    env_file:
      - .env
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./requirements/elk/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsu http://localhost:9600/_node/pipelines | grep -E '\"status\":\"(green|yellow)\"'"]
      interval: 10s
      retries: 3
      start_period: 10s
    networks:
      - transcendence
    ports:
      - "5000:5000"
    restart: unless-stopped

  elk:
    hostname: elk
    build:
      context: requirements/elk
    container_name: elk
    env_file:
      - .env
    volumes:
      - ./logs:/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      - database
      - elasticsearch
    networks:
      - transcendence
    restart: unless-stopped
